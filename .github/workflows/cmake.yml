name: cmake

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build_type:
          - Debug
          - Release
        build_option:
          - Default
          - DisableCustomFP
          - DisableNonStandard
        compiler:
          - gcc
          - clang
    steps:
    - uses: actions/checkout@v2
    - name: Prepare
      shell: bash
      run: |
        if [ "${{matrix.build_flag}}" == "DisableCustomFP" ]; then
          BUILD_OPTIONS="-DYYJSON_DISABLE_FP_READER=ON -DYYJSON_DISABLE_FP_WRITER=ON"
        elif [ "${{ matrix.build_flag }}" == "DisableNonStandard" ]; then
          BUILD_OPTIONS="-DYYJSON_DISABLE_COMMENT_READER=ON -DYYJSON_DISABLE_INF_AND_NAN_READER=ON"
        else
          BUILD_OPTIONS=""
        fi
        if [ "${{matrix.compiler}}" == "clang" ]; then
          BUILD_COMPILER="-DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++"
        else
          BUILD_COMPILER=""
        fi
        cmake -E make_directory ${{runner.workspace}}/build

    - name: CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DYYJSON_BUILD_TEST=ON $BUILD_OPTIONS $BUILD_COMPILER 

    - name: Build
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config ${{matrix.build_type}}
    
    - name: Test
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: ctest -C ${{matrix.build_type}}


  macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        build_option:
          - Default
          - DisableCustomFP
          - DisableNonStandard
    steps:
    - uses: actions/checkout@v2
    - name: Prepare
      shell: bash
      run: |
        if [ "${{matrix.build_flag}}" == "DisableCustomFP" ]; then
          BUILD_OPTIONS="-DYYJSON_DISABLE_FP_READER=ON -DYYJSON_DISABLE_FP_WRITER=ON"
        elif [ "${{ matrix.build_flag }}" == "DisableNonStandard" ]; then
          BUILD_OPTIONS="-DYYJSON_DISABLE_COMMENT_READER=ON -DYYJSON_DISABLE_INF_AND_NAN_READER=ON"
        else
          BUILD_OPTIONS=""
        fi
        cmake -E make_directory ${{runner.workspace}}/build

    - name: CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release -DYYJSON_BUILD_TEST=ON $BUILD_OPTIONS
    
    - name: Build
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config Release
    
    - name: Test
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: ctest -C Release


  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build and Test
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DYYJSON_BUILD_TEST=ON
        cmake --build . --config Release
        ctest -C Release


  codecov:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: CodeCov
      shell: bash
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Debug -DYYJSON_BUILD_TEST=ON -DYYJSON_ENABLE_TEST_COVERAGE=ON
        cmake --build . --config Debug
        ctest
        bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
